<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nim on Cas van Cooten</title><link>https://casvancooten.com/tags/nim/</link><description>Recent content in Nim on Cas van Cooten</description><generator>Hugo</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Thu, 27 Feb 2025 11:18:28 +0100</lastBuildDate><atom:link href="https://casvancooten.com/tags/nim/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a C2 Implant in Nim - Considerations and Lessons Learned</title><link>https://casvancooten.com/posts/2021/08/building-a-c2-implant-in-nim-considerations-and-lessons-learned/</link><pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate><guid>https://casvancooten.com/posts/2021/08/building-a-c2-implant-in-nim-considerations-and-lessons-learned/</guid><description>&lt;h2 id="nim-for-offensive-security">Nim for offensive security&lt;/h2>
&lt;p>For a while now I have been playing with the programming language &lt;a href="https://nim-lang.org/">Nim&lt;/a> in the context of Offensive Security. Nim is a relatively young and fairly unknown programming language that has a syntax quite similar to Python&amp;rsquo;s, so is very easy to pick up. It however offers the flexibility and low-level capabilities of languages like C/C++, and has a great foreign function interface. On top of that, it compiles to native C (as well as some other languages), which results in native binaries that are quite slim. This makes it very suitable for malware development, especially for scrubs that are too scared of C/C++ to write any proper program in those languages (like me!).&lt;/p></description></item></channel></rss>
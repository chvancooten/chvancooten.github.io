name: github pages

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed

permissions:
  contents: write
  pull-requests: write

# Only cancel in-progress runs of the same PR, never cancel production deployment
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.pull_request.number) || 'production' }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}

jobs:
  deploy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Fix timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Amsterdam"

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "latest"
          extended: true

      # Ugly hot-patch to enforce dark theme as standard
      # See: https://github.com/rhazdon/hugo-theme-hello-friend-ng/issues/353
      - name: Modify theme JS to force dark theme by default
        run: |
          sed -i 's/window.matchMedia("(prefers-color-scheme: dark)").matches/true/' themes/hello-friend-ng/assets/js/main.js

      # Handle PR cleanup for non-merged PRs that are closed
      - name: Create empty directory for PR cleanup
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false
        run: mkdir -p /tmp/empty-dir

      - name: Remove PR preview (non-merged PR)
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == false
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: /tmp/empty-dir
          destination_dir: pr-preview/pr-${{ github.event.pull_request.number }}

      # Handle PR preview when opened/updated
      - name: Set PR build configuration
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        run: |
          echo "HUGO_BASEURL=https://casvancooten.com/pr-preview/pr-${{ github.event.pull_request.number }}/" >> $GITHUB_ENV

      - name: Build PR Preview
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        run: |
          cat > config.pr.toml << EOF
          baseurl = "${{ env.HUGO_BASEURL }}"
          canonifyURLs = true
          EOF
          hugo --minify --baseURL ${{ env.HUGO_BASEURL }} --config config.pr.toml,config.toml

      - name: Deploy PR preview
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          destination_dir: pr-preview/pr-${{ github.event.pull_request.number }}
          keep_files: true

      - name: Comment on PR
        if: github.event_name == 'pull_request' && github.event.action != 'closed'
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = 'https://casvancooten.com/pr-preview/pr-${{ github.event.pull_request.number }}/';
            const comment = `📝 PR Preview deployed! [View Preview](${previewUrl})`;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('PR Preview deployed!');
            });

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

      # Handle production deployment (push to main)
      - name: Production build and deployment
        if: github.ref == 'refs/heads/main'
        run: |
          # Clean build directory first
          rm -rf ./public
          # Build production site
          hugo --minify --baseURL https://casvancooten.com/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          cname: casvancooten.com
